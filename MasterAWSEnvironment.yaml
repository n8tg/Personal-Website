AWSTemplateFormatVersion: 2010-09-09

Description: >
  "This CloudFormation template will deploy a static site via an S3 bucket,
  CloudFront distribution, Route53 record, and an existing Wildcard Cert"

Parameters:
  SSLCertARN:
    Description: ARN for Wildcard nategramer.com ssl certificate
    Type: String

Mappings:
  Region2S3WebsiteSuffix:
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website-ap-northeast-2.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ap-south-1:
      Suffix: .s3-website-ap-south-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website-us-east-2.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com

Resources:
  WebBucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: PublicRead 
      BucketName: "nategramer"
      WebsiteConfiguration: 
        ErrorDocument: "404.html"
        IndexDocument: "index.html"
    
  PublicSiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebBucket
      PolicyDocument:
        Statement:
          - 
            Action: 
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Join ['', ["arn:aws:s3:::", !Ref WebBucket, "/*"]]
            Principal: "*"
      
  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - WebBucket
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases: 
        - "nategramer.com"
        DefaultCacheBehavior:
           ForwardedValues:
             QueryString: false
           AllowedMethods:
             - HEAD
             - GET
             - OPTIONS
           Compress: true
           ViewerProtocolPolicy: redirect-to-https
           TargetOriginId: WebBucket
        Origins:
          # Configure where CloudFront is getting data
           - Id: WebBucket
             DomainName: !Join ['', [!Ref 'WebBucket', !FindInMap [Region2S3WebsiteSuffix,
                !Ref 'AWS::Region', Suffix]]]
             CustomOriginConfig:
                 # https did not work for me, looks like s3 does not support HTTPS in this way
                 # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-s3-origin.html
                 OriginProtocolPolicy: http-only
        IPV6Enabled: true
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Sub ${SSLCertARN}
    
  route53RS:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: "nategramer.com."
      # AWS's aliases need to be A records for some reason
      Type: A
      HostedZoneName: nategramer.com.
      AliasTarget:
        DNSName: !GetAtt [cloudfrontDistribution, DomainName]
        # According to Amazon, this is the Correct HostedZoneId for CloudFront
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget-1.html
        HostedZoneId: "Z2FDTNDATAQYW2"
Outputs:
  WebsiteURL:
    Description: FQDN of the deployed site
    Value: "https://nategramer.com"
